apiVersion: apps/v1
kind: Deployment
metadata:
  name: odoo-deployment
  labels:
    app: odoo
  namespace: {{.Values.namespace}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: odoo
  template:
    metadata:
      labels:
        app: odoo
        hash: {{.Values.odoo.deploymenthash}}
    spec:
      volumes:
      {{- if or (eq .Values.env "prod") (eq .Values.env "stage")}}
      - name: rclone-config
        secret:
          optional: false
          secretName: rclone-config
      - configMap:
          defaultMode: 484
          name: rclone-script-cm
        name: rclone-scripts
      - name: backup-scripts
        configMap:
          name: backup-scripts
          defaultMode: 0777
      - name: backup-data
        emptyDir:
          sizeLimit: 50Gi
      {{- end}}
      
      - name: odoo-data
        emptyDir:
          sizeLimit: 500Mi
      - name: addons-scripts
        configMap:
          name: addons-scripts
          defaultMode: 0777
      containers:
      {{- if or (eq .Values.env "prod") (eq .Values.env "stage")}}
      - name: rclone-backup
        image: rclone/rclone:latest
        command: ["/bin/sh", "-c", "/scripts/rclone_run.sh"]
        volumeMounts:
          - mountPath: /config/rclone
            name: rclone-config
          - mountPath: /scripts
            name: rclone-scripts
            readOnly: true
          - mountPath: /backup
            name: backup-data
        envFrom:
        - configMapRef:
            name: odoo-config
        env:
        - name: BUCKET_NAME
          value: {{.Values.s3object.bucketname | quote }}
        - name: PROVIDER
          value: {{.Values.s3object.provider | quote }}
        - name': STNAME
          value: {{.Values.s3object.name | quote}}
      - name: odoo-sidecar
        image: python:3.9.18-slim-bullseye
        command: ["bash", "/mnt/scripts/run_backup.sh"]
        
        volumeMounts:
        - name: backup-data
          mountPath: /backup
        - name: backup-scripts
          mountPath: /mnt/scripts
        envFrom:
        - configMapRef:
            name: odoo-config
      {{- end}}
      - name: odoo
        image: {{.Values.odoo.imageversion}}
        volumeMounts:
        - name: addons-scripts
          mountPath: /mnt/scripts
        - name: odoo-data
          mountPath: /mnt/data
        ports:
        - containerPort: 8069
        command: ["bash", "/mnt/scripts/run.sh"]
        #args: ["/mnt/scripts/global_addons_import.sh;/mnt/scripts/custom_addons_import.sh;/mnt/scripts/requirements.sh"]
        envFrom:
          - configMapRef:
              name: odoo-config
        env:
        - name: HOST
          value: postgres-service.{{.Values.namespace}}.svc
        - name: USER
          value: odoo
        - name: PASSWORD
          value: {{.Values.postgres.password}}
        